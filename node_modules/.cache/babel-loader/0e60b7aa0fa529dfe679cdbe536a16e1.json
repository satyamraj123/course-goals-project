{"ast":null,"code":"var _jsxFileName = \"C:\\\\javascript and reactjs\\\\udemy course\\\\module 6-styling\\\\course goals project\\\\src\\\\components\\\\UI\\\\Button\\\\Button.js\";\nimport React from \"react\"; //CSS MODULES\n\nimport styles from \"./Button.module.css\"; //css modules are better than styled components\n//it keeps the css code seperate\n//and we can choose which style or class to choose from which css file\n//here in import, styles is an object\n//and all classes as there as properties of that object\n//so it solves the problem and keeps the css code seperate\n//STYLED COMPONENTS\n//import styledComponents from \"styled-components\";\n//to install styled components package\n//npm install --save styled-components\n//used to create components with its own css code.\n//in case of big code base, names of css classes can be same\n//and those undesired styles will be applied just by importing the css file\n//to avoid this problem, this package was made\n//it creates unique css classes behind the scenes- (inspect element to see this)\n//const Button=styledComponents.button``;\n//button`` is like a function. similarly div, p and all present\n//syntax to create a styled component and css code goes between commas\n//adding media querries - styling based on device size\n// const Button = styledComponents.button`\n// width: 100%;\n// @media(min-width:768px){\n// width:auto;\n// }\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n// &:focus {\n//   outline: none;\n// }\n// &:hover,\n// &:active {\n//   background: #ac0e77;\n//   border-color: #ac0e77;\n//   box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n// }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  //styles.className\n  //if another css file\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: props.type,\n    className: styles.button,\n    onClick: props.onClick,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/javascript and reactjs/udemy course/module 6-styling/course goals project/src/components/UI/Button/Button.js"],"names":["React","styles","Button","props","type","button","onClick","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB;AACA;AACA,sBACE;AAAQ,IAAA,IAAI,EAAEA,KAAK,CAACC,IAApB;AAA0B,IAAA,SAAS,EAAEH,MAAM,CAACI,MAA5C;AAAoD,IAAA,OAAO,EAAEF,KAAK,CAACG,OAAnE;AAAA,cACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARD;;KAAML,M;AAUN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\n\n//CSS MODULES\nimport styles from \"./Button.module.css\";\n//css modules are better than styled components\n//it keeps the css code seperate\n//and we can choose which style or class to choose from which css file\n//here in import, styles is an object\n//and all classes as there as properties of that object\n//so it solves the problem and keeps the css code seperate\n\n\n//STYLED COMPONENTS\n//import styledComponents from \"styled-components\";\n//to install styled components package\n//npm install --save styled-components\n//used to create components with its own css code.\n//in case of big code base, names of css classes can be same\n//and those undesired styles will be applied just by importing the css file\n//to avoid this problem, this package was made\n//it creates unique css classes behind the scenes- (inspect element to see this)\n//const Button=styledComponents.button``;\n//button`` is like a function. similarly div, p and all present\n//syntax to create a styled component and css code goes between commas\n//adding media querries - styling based on device size\n// const Button = styledComponents.button`\n\n// width: 100%;\n// @media(min-width:768px){\n// width:auto;\n// }\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n\n\n// &:focus {\n//   outline: none;\n// }\n\n// &:hover,\n// &:active {\n//   background: #ac0e77;\n//   border-color: #ac0e77;\n//   box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n// }\n\n// `;\n\nconst Button = props => {\n  //styles.className\n  //if another css file\n  return (\n    <button type={props.type} className={styles.button} onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}