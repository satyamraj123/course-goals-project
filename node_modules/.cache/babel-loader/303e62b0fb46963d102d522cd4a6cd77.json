{"ast":null,"code":"var _jsxFileName = \"C:\\\\javascript and reactjs\\\\udemy course\\\\module 6-styling\\\\course goals project\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const FormControl = styled.div`\n \n    margin: 0.5rem 0;\n\n  & label {\n    font-weight: bold;\n    display: block;\n    margin-bottom: 0.5rem;\n    color: ${props => props.inValid ? 'red' : 'black'}\n  }\n  \n  & input {\n    display: block;\n    width: 100%;\n    border: 1px solid ${props => props.inValid ? 'red' : '#ccc'};\n    background: ${props => props.inValid ? '#ffd7d7' : 'transparent'};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n  \n & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n  `;\n\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n  }; //how to use css dynamic classes\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      inValid: !isValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseInput, \"mIOqxu9FayRAZu4sNJrmNUPBTGI=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["C:/javascript and reactjs/udemy course/module 6-styling/course goals project/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","styled","Button","CourseInput","props","enteredValue","setEnteredValue","isValid","setIsValid","FormControl","div","inValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAASC,UAAT,IAAqBR,QAAQ,CAAC,IAAD,CAAnC;AAEA,QAAMS,WAAW,GAACR,MAAM,CAACS,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaN,KAAK,IAAGA,KAAK,CAACO,OAAN,GAAc,KAAd,GAAoB,OAAS;AAClD;AACA;AACA;AACA;AACA;AACA,wBAAwBP,KAAK,IAAGA,KAAK,CAACO,OAAN,GAAc,KAAd,GAAoB,MAAQ;AAC5D,kBAAkBP,KAAK,IAAGA,KAAK,CAACO,OAAN,GAAc,SAAd,GAAwB,aAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA1BE;;AA2BA,QAAMC,sBAAsB,GAAGC,KAAK,IAAI;AACtC,QAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAiC,CAApC,EAAsC;AACpCT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDF,IAAAA,eAAe,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GALD;;AAOA,QAAMG,iBAAiB,GAAGL,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACM,cAAN;;AACA,QAAGd,YAAY,CAACW,IAAb,GAAoBC,MAApB,KAA6B,CAAhC,EAAkC;AAChCT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACDJ,IAAAA,KAAK,CAACgB,SAAN,CAAgBf,YAAhB;AACD,GAPD,CAtC2B,CA8C7B;;;AACE,sBACE;AAAM,IAAA,QAAQ,EAAEa,iBAAhB;AAAA,4BAGE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,CAACX,OAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEK;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA1DD;;GAAMT,W;;KAAAA,W;AA4DN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\n\nconst CourseInput = props => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid,setIsValid]=useState(true);\n\n  const FormControl=styled.div`\n \n    margin: 0.5rem 0;\n\n  & label {\n    font-weight: bold;\n    display: block;\n    margin-bottom: 0.5rem;\n    color: ${props=>(props.inValid?'red':'black')}\n  }\n  \n  & input {\n    display: block;\n    width: 100%;\n    border: 1px solid ${props=>(props.inValid?'red':'#ccc')};\n    background: ${props=>(props.inValid?'#ffd7d7':'transparent')};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n  \n & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n  `;\n  const goalInputChangeHandler = event => {\n    if(event.target.value.trim().length>0){\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if(enteredValue.trim().length===0){\n      setIsValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n//how to use css dynamic classes\n  return (\n    <form onSubmit={formSubmitHandler}>\n      {/* ``is used for string interpolation using $ sign */}\n      {/*one way is <FormControl className={`form-control ${isValid?'':'invalid'}`}> */}\n      <FormControl inValid={!isValid}>\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n      </FormControl>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}